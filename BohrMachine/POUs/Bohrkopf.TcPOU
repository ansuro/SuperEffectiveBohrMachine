<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="Bohrkopf" Id="{d4826d0c-639b-4975-a116-733f61215589}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FINAL Bohrkopf
VAR
	yAchse: AXIS_REF;
	bYEnabled: BOOL := TRUE;
	rYPos: LREAL := 0;
	rYVelo: LREAL := 10;
	
	bBohrerMove: BOOL := FALSE;
	bBohrerMoved: BOOL := FALSE;
	
	// MC2 Funktionen
	fbAxisPower: MC_Power;
	fbAxisMove: MC_MoveAbsolute;
	
	// aktueller Zustand des Bohrers
	// TODO Init Methode, auch in Bohrmaschine
	eZustand: E_BOHRER_STATES := E_BOHRER_STATES.eRunterfahrend;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[yAchse.ReadStatus();
fbAxisPower(Axis := yAchse, Enable := bYEnabled, Enable_Positive := bYEnabled, Enable_Negative := bYEnabled);

// move according to input
fbAxisMove(
	Axis := yAchse,
	Velocity := rYVelo,
	Execute := bBohrerMove,
	Position := rYPos,
	Done => bBohrerMoved
);
]]></ST>
    </Implementation>
    <Method Name="Bohren" Id="{9b119895-f6b7-497b-8763-da510740a093}">
      <Declaration><![CDATA[METHOD PUBLIC Bohren : BOOL
VAR_INPUT
	rDicke: REAL;
END_VAR
VAR_OUTPUT
	bDone: BOOL := FALSE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
	Es soll 1cm tief in das Werkstück gebohrt werden.
	Der Abstand zwischen Bohrer und Auflagefläche, auf dem das Werkstück liegt,
	beträgt 5cm.
*)
CASE eZustand OF
	E_BOHRER_STATES.eOben:
		bBohrerMove := FALSE;
		eZustand := E_BOHRER_STATES.eRunterfahrend;
		bDone := TRUE;
	
	E_BOHRER_STATES.eHochfahrend:
		rYPos := 0;
		bBohrerMove := TRUE;
	
	E_BOHRER_STATES.eRunterfahrend:
		// Abstand + Bohrtiefe (positive Y-Achse zeigt nach unten)
		rYPos := 50 - rDicke + 10;
		bBohrerMove := TRUE;
	
	E_BOHRER_STATES.eUnten:
		bBohrerMove := FALSE;
		eZustand := E_BOHRER_STATES.eHochfahrend;
	
END_CASE

// TODO kann in den Main-Loop des Bohrers


IF(bBohrerMoved) THEN
	bBohrerMoved := FALSE;
	//bBohrerMove := FALSE;
	// Logging
	F_Log('Bohrer moved. Zustand: ');
	F_Log(INT_TO_STRING(eZustand));
	ADSLOGLREAL(
		msgCtrlMask := ADSLOG_MSGTYPE_HINT,
		msgFmtStr := 'Position Bohrer: %f',
		lrealArg := yAchse.NcToPlc.ActPos
	);
	
	// State change
	CASE eZustand OF
		E_BOHRER_STATES.eHochfahrend:
			eZustand := E_BOHRER_STATES.eOben;
			
		E_BOHRER_STATES.eRunterfahrend:
			eZustand := E_BOHRER_STATES.eUnten;
	END_CASE
END_IF

yAchse.NcToPlc.ActPos;


(*
IF(bBohrerReset) THEN
	ADSLOGLREAL(
		msgCtrlMask := ADSLOG_MSGTYPE_HINT,
		msgFmtStr := 'Tiefe Bohrer: %f',
		lrealArg := yAchse.NcToPlc.ActPos
	);
	bBohren := FALSE;
END_IF

IF(bDone) THEN
	ADSLOGLREAL(
		msgCtrlMask := ADSLOG_MSGTYPE_HINT,
		msgFmtStr := 'Bohrer Reset: %f',
		lrealArg := yAchse.NcToPlc.ActPos
	);
	bBohrerReset := FALSE;
END_IF
*)]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Bohrkopf">
      <LineId Id="9" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="86" Count="6" />
      <LineId Id="48" Count="0" />
      <LineId Id="93" Count="0" />
    </LineIds>
    <LineIds Name="Bohrkopf.Bohren">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="2" />
      <LineId Id="10" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="129" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="108" Count="1" />
      <LineId Id="100" Count="1" />
      <LineId Id="105" Count="2" />
      <LineId Id="102" Count="1" />
      <LineId Id="110" Count="1" />
      <LineId Id="104" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="120" Count="2" />
      <LineId Id="125" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="145" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="140" Count="3" />
      <LineId Id="139" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="29" Count="3" />
      <LineId Id="28" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="47" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="59" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>